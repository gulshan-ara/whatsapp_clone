{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"OverflowIcon\", \"accessibilityLabel\", \"testID\", \"onPress\", \"left\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { extractOverflowButtonData, overflowMenuPressHandlerDropdownMenu, defaultOnOverflowMenuPress } from \"../overflowMenuPressHandlers\";\nimport { OVERFLOW_TOP, OverflowMenuContext } from \"./OverflowMenuContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButton } from \"../HeaderButton\";\nimport { OVERFLOW_BUTTON_TEST_ID } from \"../e2e\";\nimport { ButtonsWrapper } from \"../ButtonsWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var OverflowMenu = function OverflowMenu(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    _ref$OverflowIcon = _ref.OverflowIcon,\n    OverflowIcon = _ref$OverflowIcon === void 0 ? _jsx(View, {}) : _ref$OverflowIcon,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'More options' : _ref$accessibilityLab,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? OVERFLOW_BUTTON_TEST_ID : _ref$testID,\n    _ref$onPress = _ref.onPress,\n    onPress = _ref$onPress === void 0 ? defaultOnOverflowMenuPress : _ref$onPress,\n    _ref$left = _ref.left,\n    left = _ref$left === void 0 ? false : _ref$left,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var toggleMenu = React.useContext(OverflowMenuContext);\n  var btnRef = React.useRef(null);\n  var renderButtonElement = React.useCallback(function (_ref2) {\n    var color = _ref2.color;\n    return React.isValidElement(OverflowIcon) ? OverflowIcon : _jsx(OverflowIcon, {\n      color: color\n    });\n  }, [OverflowIcon]);\n  var usedOnPress = React.useCallback(function () {\n    var titlesAndOnPresses = onPress === overflowMenuPressHandlerDropdownMenu ? [] : extractOverflowButtonData(children);\n    onPress({\n      children: children,\n      hiddenButtons: titlesAndOnPresses,\n      overflowButtonRef: btnRef.current,\n      _private_toggleMenu: toggleMenu\n    });\n  }, [children, onPress, toggleMenu]);\n  var validChildren = React.Children.toArray(children).filter(React.isValidElement);\n  if (validChildren.length === 0) {\n    return null;\n  }\n  return _jsxs(ButtonsWrapper, {\n    left: left,\n    children: [_jsx(View, {\n      ref: btnRef,\n      collapsable: false,\n      style: styles.overflowMenuView\n    }), _jsx(HeaderButton, _objectSpread({\n      title: \"overflow menu\",\n      renderButtonElement: renderButtonElement,\n      style: [styles.icon, style],\n      onPress: usedOnPress,\n      accessibilityLabel: accessibilityLabel,\n      testID: testID\n    }, other))]\n  });\n};\nvar styles = StyleSheet.create({\n  icon: _objectSpread({}, Platform.select({\n    android: {\n      marginRight: 9,\n      marginLeft: 7\n    }\n  })),\n  overflowMenuView: {\n    position: 'absolute',\n    top: -OVERFLOW_TOP,\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1\n  }\n});","map":{"version":3,"names":["React","extractOverflowButtonData","overflowMenuPressHandlerDropdownMenu","defaultOnOverflowMenuPress","OVERFLOW_TOP","OverflowMenuContext","View","StyleSheet","Platform","HeaderButton","OVERFLOW_BUTTON_TEST_ID","ButtonsWrapper","jsx","_jsx","jsxs","_jsxs","OverflowMenu","_ref","children","style","_ref$OverflowIcon","OverflowIcon","_ref$accessibilityLab","accessibilityLabel","_ref$testID","testID","_ref$onPress","onPress","_ref$left","left","other","_objectWithoutProperties","_excluded","toggleMenu","useContext","btnRef","useRef","renderButtonElement","useCallback","_ref2","color","isValidElement","usedOnPress","titlesAndOnPresses","hiddenButtons","overflowButtonRef","current","_private_toggleMenu","validChildren","Children","toArray","filter","length","ref","collapsable","styles","overflowMenuView","_objectSpread","title","icon","create","select","android","marginRight","marginLeft","position","top","right","backgroundColor","width","height"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/node_modules/react-navigation-header-buttons/src/overflowMenu/OverflowMenu.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport {\n  extractOverflowButtonData,\n  overflowMenuPressHandlerDropdownMenu,\n  defaultOnOverflowMenuPress,\n  type OnOverflowMenuPressParams,\n} from '../overflowMenuPressHandlers';\nimport { OVERFLOW_TOP, OverflowMenuContext } from './OverflowMenuContext';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { HeaderButton } from '../HeaderButton';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport { OVERFLOW_BUTTON_TEST_ID } from '../e2e';\nimport { ButtonsWrapper } from '../ButtonsWrapper';\n\nexport type OverflowMenuProps = {\n  children: React.Node,\n  OverflowIcon: React.Element<any> | React.ComponentType<any>,\n  style?: ViewStyleProp,\n  testID?: string,\n  accessibilityLabel?: string,\n  onPress: (OnOverflowMenuPressParams) => any,\n  left?: boolean,\n  ...\n};\n\nexport const OverflowMenu = ({\n  children,\n  style,\n  OverflowIcon = <View />,\n  accessibilityLabel = 'More options',\n  testID = OVERFLOW_BUTTON_TEST_ID,\n  onPress = defaultOnOverflowMenuPress,\n  left = false, // this is needed only when OverflowMenu is rendered without HeaderButtons,\n  ...other\n}: OverflowMenuProps): React.Node => {\n  const toggleMenu = React.useContext(OverflowMenuContext);\n  const btnRef = React.useRef<typeof View | null>(null);\n  const renderButtonElement = React.useCallback(\n    ({ color }) => {\n      // $FlowIssue\n      return React.isValidElement(OverflowIcon) ? OverflowIcon : <OverflowIcon color={color} />;\n    },\n    [OverflowIcon]\n  );\n\n  const usedOnPress = React.useCallback(() => {\n    const titlesAndOnPresses =\n      onPress === overflowMenuPressHandlerDropdownMenu ? [] : extractOverflowButtonData(children);\n    onPress({\n      children,\n      hiddenButtons: titlesAndOnPresses,\n      overflowButtonRef: btnRef.current,\n      _private_toggleMenu: toggleMenu,\n    });\n  }, [children, onPress, toggleMenu]);\n\n  const validChildren = React.Children.toArray(children).filter(React.isValidElement);\n  if (validChildren.length === 0) {\n    return null;\n  }\n\n  return (\n    <ButtonsWrapper left={left}>\n      <View ref={btnRef} collapsable={false} style={styles.overflowMenuView} />\n      {/* $FlowFixMeProps yeaah, this is boring :/ */}\n      <HeaderButton\n        title=\"overflow menu\"\n        renderButtonElement={renderButtonElement}\n        style={[styles.icon, style]}\n        onPress={usedOnPress}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n        {...other}\n      />\n    </ButtonsWrapper>\n  );\n};\n\nconst styles = StyleSheet.create({\n  icon: {\n    ...Platform.select({\n      android: {\n        marginRight: 9,\n        marginLeft: 7,\n      },\n    }),\n  },\n  overflowMenuView: {\n    // these are really just needed bcs of the native android popup menu\n    position: 'absolute',\n    top: -OVERFLOW_TOP,\n    // TODO android actually has a little gap on the right of the menu\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}