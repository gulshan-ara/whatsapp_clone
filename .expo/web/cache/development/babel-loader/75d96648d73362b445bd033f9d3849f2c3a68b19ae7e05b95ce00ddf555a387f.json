{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { getDefaultSpaceAboveMenu } from \"./statusBarUtils\";\nimport { Menu } from \"./vendor/Menu\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var OVERFLOW_TOP = 15;\nvar warn = function warn() {\n  console.warn('It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' + ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' + 'Please check the installation instructions in the react-navigation-header-buttons readme!');\n};\nexport var OverflowMenuContext = React.createContext(warn);\nexport var OverflowMenuProvider = function OverflowMenuProvider(_ref) {\n  var children = _ref.children,\n    spaceAboveMenu = _ref.spaceAboveMenu;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useState3 = React.useState({\n      x: Dimensions.get('window').width - 10,\n      y: 40\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    position = _React$useState4[0],\n    setPosition = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    elements = _React$useState6[0],\n    setElements = _React$useState6[1];\n  var _useTheme = useTheme(),\n    card = _useTheme.colors.card;\n  var hideMenu = React.useCallback(function () {\n    setVisible(false);\n  }, []);\n  var toggleMenu = React.useCallback(function (params) {\n    setElements((params == null ? void 0 : params.elements) || []);\n    if (params) {\n      var x = params.x,\n        y = params.y;\n      var extraDelta = spaceAboveMenu != null ? spaceAboveMenu : getDefaultSpaceAboveMenu();\n      setPosition({\n        x: x,\n        y: y + extraDelta\n      });\n    }\n    setVisible(function (prevVisible) {\n      return !prevVisible;\n    });\n  }, [spaceAboveMenu]);\n  return _jsxs(OverflowMenuContext.Provider, {\n    value: toggleMenu,\n    children: [React.Children.only(children), _jsx(Menu, {\n      visible: visible,\n      onDismiss: hideMenu,\n      anchor: position,\n      contentStyle: {\n        backgroundColor: card\n      },\n      children: elements\n    })]\n  });\n};","map":{"version":3,"names":["React","Dimensions","getDefaultSpaceAboveMenu","Menu","useTheme","jsx","_jsx","jsxs","_jsxs","OVERFLOW_TOP","warn","console","OverflowMenuContext","createContext","OverflowMenuProvider","_ref","children","spaceAboveMenu","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","_React$useState3","x","get","width","y","_React$useState4","position","setPosition","_React$useState5","_React$useState6","elements","setElements","_useTheme","card","colors","hideMenu","useCallback","toggleMenu","params","extraDelta","prevVisible","Provider","value","Children","only","onDismiss","anchor","contentStyle","backgroundColor"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/node_modules/react-navigation-header-buttons/src/overflowMenu/OverflowMenuContext.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport { getDefaultSpaceAboveMenu } from './statusBarUtils';\nimport { Menu } from './vendor/Menu';\nimport { useTheme } from '@react-navigation/native';\n\nexport type ToggleMenuParam = ?{\n  elements: React.ChildrenArray<any>,\n  x: number,\n  y: number,\n};\n\nexport const OVERFLOW_TOP = 15;\n\nconst warn = () => {\n  // the noop value will be replaced by OverflowMenuProvider rendered in app root\n  console.warn(\n    'It seems like you tried to open the overflow menu using the overflowMenuPressHandlerDropdownMenu' +\n      ' - which is the default handler on android - but you forgot to wrap your root component in <OverflowMenuProvider />.' +\n      'Please check the installation instructions in the react-navigation-header-buttons readme!'\n  );\n};\nexport const OverflowMenuContext: any = React.createContext<(ToggleMenuParam) => void>(warn);\n\ntype Props = {\n  children: React.Element<any>,\n  spaceAboveMenu?: number,\n};\n\nexport const OverflowMenuProvider = ({\n  children,\n  spaceAboveMenu,\n}: Props): React.Element<typeof OverflowMenuProvider> => {\n  const [visible, setVisible] = React.useState(false);\n  const [position, setPosition] = React.useState({ x: Dimensions.get('window').width - 10, y: 40 });\n  const [elements, setElements] = React.useState(null);\n  const {\n    colors: { card },\n  } = useTheme();\n\n  const hideMenu = React.useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const toggleMenu = React.useCallback(\n    (params: ToggleMenuParam) => {\n      setElements(params?.elements || []);\n      if (params) {\n        const { x, y } = params;\n        const extraDelta = spaceAboveMenu ?? getDefaultSpaceAboveMenu();\n        setPosition({ x, y: y + extraDelta });\n      }\n      setVisible((prevVisible) => !prevVisible);\n    },\n    [spaceAboveMenu]\n  );\n\n  return (\n    <OverflowMenuContext.Provider value={toggleMenu}>\n      {React.Children.only(children)}\n      <Menu\n        visible={visible}\n        onDismiss={hideMenu}\n        anchor={position}\n        contentStyle={{ backgroundColor: card }}\n      >\n        {elements}\n      </Menu>\n    </OverflowMenuContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}