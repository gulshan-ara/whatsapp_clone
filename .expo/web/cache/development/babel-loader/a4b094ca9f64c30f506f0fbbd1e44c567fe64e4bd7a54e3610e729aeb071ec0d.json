{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaProvider, SafeAreaView } from \"react-native-safe-area-context\";\nimport { registerRootComponent } from \"expo\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport * as Font from \"expo-font\";\nimport \"react-native-gesture-handler\";\nimport { Provider } from \"react-redux\";\nimport MainNavigator from \"./navigation/AppNavigator\";\nimport { store } from \"./store/store\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    appIsLoaded = _useState2[0],\n    setAppIsLoaded = _useState2[1];\n  useEffect(function () {\n    var prepare = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync({\n            black: require(\"./assets/fonts/Roboto-Black.ttf\"),\n            blackItalic: require(\"./assets/fonts/Roboto-BlackItalic.ttf\"),\n            bold: require(\"./assets/fonts/Roboto-Bold.ttf\"),\n            boldItalic: require(\"./assets/fonts/Roboto-BoldItalic.ttf\"),\n            italic: require(\"./assets/fonts/Roboto-Italic.ttf\"),\n            light: require(\"./assets/fonts/Roboto-Light.ttf\"),\n            lightItalic: require(\"./assets/fonts/Roboto-LightItalic.ttf\"),\n            medium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n            mediumItalic: require(\"./assets/fonts/Roboto-MediumItalic.ttf\"),\n            regular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            thin: require(\"./assets/fonts/Roboto-Thin.ttf\"),\n            thinItalic: require(\"./assets/fonts/Roboto-ThinItalic.ttf\")\n          });\n        } catch (error) {\n          console.log.error();\n        } finally {\n          setAppIsLoaded(true);\n        }\n      });\n      return function prepare() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    prepare();\n  }, []);\n  var onLayout = useCallback(_asyncToGenerator(function* () {\n    if (appIsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [appIsLoaded]);\n  if (!appIsLoaded) {\n    return null;\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(SafeAreaProvider, {\n      onLayout: onLayout,\n      children: _jsx(MainNavigator, {})\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  label: {\n    fontFamily: \"black\",\n    fontSize: 18,\n    color: \"black\"\n  }\n});\nregisterRootComponent(App);","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","SafeAreaProvider","SafeAreaView","registerRootComponent","SplashScreen","useCallback","useState","useEffect","Font","Provider","MainNavigator","store","AsyncStorage","jsx","_jsx","preventAutoHideAsync","App","_useState","_useState2","_slicedToArray","appIsLoaded","setAppIsLoaded","prepare","_ref","_asyncToGenerator","loadAsync","black","require","blackItalic","bold","boldItalic","italic","light","lightItalic","medium","mediumItalic","regular","thin","thinItalic","error","console","log","apply","arguments","onLayout","hideAsync","children","styles","create","container","flex","backgroundColor","alignItems","justifyContent","label","fontFamily","fontSize","color"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/App.js"],"sourcesContent":["// imports from packeges online\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { SafeAreaProvider, SafeAreaView } from \"react-native-safe-area-context\";\nimport { registerRootComponent } from \"expo\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport * as Font from \"expo-font\";\nimport \"react-native-gesture-handler\";\nimport { Provider } from \"react-redux\";\n\n// imports from my own files!\nimport MainNavigator from \"./navigation/AppNavigator\";\nimport { store } from \"./store/store\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync();\n\n// AsyncStorage.clear();\n\nexport default function App() {\n\tconst [appIsLoaded, setAppIsLoaded] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst prepare = async () => {\n\t\t\ttry {\n\t\t\t\tawait Font.loadAsync({\n\t\t\t\t\tblack: require(\"./assets/fonts/Roboto-Black.ttf\"),\n\t\t\t\t\tblackItalic: require(\"./assets/fonts/Roboto-BlackItalic.ttf\"),\n\t\t\t\t\tbold: require(\"./assets/fonts/Roboto-Bold.ttf\"),\n\t\t\t\t\tboldItalic: require(\"./assets/fonts/Roboto-BoldItalic.ttf\"),\n\t\t\t\t\titalic: require(\"./assets/fonts/Roboto-Italic.ttf\"),\n\t\t\t\t\tlight: require(\"./assets/fonts/Roboto-Light.ttf\"),\n\t\t\t\t\tlightItalic: require(\"./assets/fonts/Roboto-LightItalic.ttf\"),\n\t\t\t\t\tmedium: require(\"./assets/fonts/Roboto-Medium.ttf\"),\n\t\t\t\t\tmediumItalic: require(\"./assets/fonts/Roboto-MediumItalic.ttf\"),\n\t\t\t\t\tregular: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n\t\t\t\t\tthin: require(\"./assets/fonts/Roboto-Thin.ttf\"),\n\t\t\t\t\tthinItalic: require(\"./assets/fonts/Roboto-ThinItalic.ttf\"),\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log.error();\n\t\t\t} finally {\n\t\t\t\tsetAppIsLoaded(true);\n\t\t\t}\n\t\t};\n\n\t\tprepare();\n\t}, []);\n\n\tconst onLayout = useCallback(async () => {\n\t\tif (appIsLoaded) {\n\t\t\tawait SplashScreen.hideAsync();\n\t\t}\n\t}, [appIsLoaded]);\n\n\tif (!appIsLoaded) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t// Anything inside the Provider gets access to the states stored in store of redux\n\t\t<Provider store={store}>\n\t\t\t<SafeAreaProvider onLayout={onLayout}>\n\t\t\t\t<MainNavigator />\n\t\t\t</SafeAreaProvider>\n\t\t</Provider>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tlabel: {\n\t\tfontFamily: \"black\",\n\t\tfontSize: 18,\n\t\tcolor: \"black\",\n\t},\n});\n\nregisterRootComponent(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}