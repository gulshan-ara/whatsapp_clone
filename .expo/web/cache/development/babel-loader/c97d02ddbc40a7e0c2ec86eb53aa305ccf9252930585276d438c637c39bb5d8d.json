{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useCallback, useState } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Feather } from \"@expo/vector-icons\";\nimport backgroundImage from \"../assets/images/droplet.jpeg\";\nimport colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageText = _useState2[0],\n    setMessageText = _useState2[1];\n  var sendMessage = useCallback(function () {\n    setMessageText(\"\");\n  }, [messageText]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ImageBackground, {\n      source: backgroundImage,\n      style: styles.backgroundImage\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log(\"Pressed!\");\n        },\n        style: styles.mediaButton,\n        children: _jsx(Feather, {\n          name: \"plus\",\n          size: 24,\n          color: colors.blue\n        })\n      }), _jsx(TextInput, {\n        style: styles.textBox,\n        value: messageText,\n        onChangeText: function onChangeText(text) {\n          return setMessageText(text);\n        },\n        onSubmitEditing: sendMessage\n      }), messageText === \"\" && _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log(\"Pressed!\");\n        },\n        style: styles.mediaButton,\n        children: _jsx(Feather, {\n          name: \"camera\",\n          size: 24,\n          color: colors.blue\n        })\n      }), messageText !== \"\" && _jsx(TouchableOpacity, {\n        onPress: sendMessage,\n        style: _objectSpread(_objectSpread({}, styles.mediaButton), styles.sendButton),\n        children: _jsx(Feather, {\n          name: \"send\",\n          size: 18,\n          color: \"white\"\n        })\n      })]\n    })]\n  });\n};\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  backgroundImage: {\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    paddingHorizontal: 8,\n    paddingVertical: 10,\n    height: 50\n  },\n  textBox: {\n    flex: 1,\n    borderWidth: 1,\n    borderRadius: 50,\n    borderColor: colors.lightgrey,\n    marginHorizontal: 15,\n    paddingHorizontal: 12\n  },\n  mediaButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 35\n  },\n  sendButton: {\n    backgroundColor: colors.blue,\n    borderRadius: 50,\n    paddingHorizontal: 8,\n    width: 35\n  }\n});","map":{"version":3,"names":["React","useCallback","useState","ImageBackground","Feather","backgroundImage","colors","jsx","_jsx","jsxs","_jsxs","ChatScreen","_useState","_useState2","_slicedToArray","messageText","setMessageText","sendMessage","View","style","styles","container","children","source","inputContainer","TouchableOpacity","onPress","console","log","mediaButton","name","size","color","blue","TextInput","textBox","value","onChangeText","text","onSubmitEditing","_objectSpread","sendButton","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingVertical","height","borderWidth","borderRadius","borderColor","lightgrey","marginHorizontal","alignItems","justifyContent","width","backgroundColor"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/screens/ChatScreen.js"],"sourcesContent":["import { View, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\nimport React, { useCallback, useState } from \"react\";\nimport { ImageBackground } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport backgroundImage from \"../assets/images/droplet.jpeg\";\nimport colors from \"../constants/colors\";\n\nconst ChatScreen = () => {\n\tconst [messageText, setMessageText] = useState(\"\");\n\n\t// This function will render only when messageText is changed\n\tconst sendMessage = useCallback(() => {\n\t\tsetMessageText(\"\");\n\t}, [messageText]);\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ImageBackground\n\t\t\t\tsource={backgroundImage}\n\t\t\t\tstyle={styles.backgroundImage}\n\t\t\t/>\n\t\t\t<View style={styles.inputContainer}>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => console.log(\"Pressed!\")}\n\t\t\t\t\tstyle={styles.mediaButton}\n\t\t\t\t>\n\t\t\t\t\t<Feather name=\"plus\" size={24} color={colors.blue} />\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textBox}\n\t\t\t\t\tvalue={messageText}\n\t\t\t\t\tonChangeText={(text) => setMessageText(text)}\n\t\t\t\t\tonSubmitEditing={sendMessage}\n\t\t\t\t/>\n\t\t\t\t{messageText === \"\" && (\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => console.log(\"Pressed!\")}\n\t\t\t\t\t\tstyle={styles.mediaButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Feather name=\"camera\" size={24} color={colors.blue} />\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t)}\n\t\t\t\t{messageText !== \"\" && (\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={sendMessage}\n\t\t\t\t\t\tstyle={{ ...styles.mediaButton, ...styles.sendButton }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Feather name=\"send\" size={18} color=\"white\" />\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tflexDirection: \"column\",\n\t},\n\tbackgroundImage: {\n\t\tflex: 1,\n\t},\n\tinputContainer: {\n\t\tflexDirection: \"row\",\n\t\tpaddingHorizontal: 8,\n\t\tpaddingVertical: 10,\n\t\theight: 50,\n\t},\n\ttextBox: {\n\t\tflex: 1,\n\t\tborderWidth: 1,\n\t\tborderRadius: 50,\n\t\tborderColor: colors.lightgrey,\n\t\tmarginHorizontal: 15,\n\t\tpaddingHorizontal: 12,\n\t},\n\tmediaButton: {\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\twidth: 35,\n\t},\n\tsendButton: {\n\t\tbackgroundColor: colors.blue,\n\t\tborderRadius: 50,\n\t\tpaddingHorizontal: 8,\n\t\twidth: 35,\n\t},\n});\n"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,eAAA;AAErD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,eAAe;AACtB,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAGlC,IAAMI,WAAW,GAAGhB,WAAW,CAAC,YAAM;IACrCe,cAAc,CAAC,EAAE,CAAC;EACnB,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAEjB,OACCL,KAAA,CAACQ,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC7Bd,IAAA,CAACL,eAAe;MACfoB,MAAM,EAAElB,eAAgB;MACxBc,KAAK,EAAEC,MAAM,CAACf;IAAgB,CAC9B,CAAC,EACFK,KAAA,CAACQ,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACI,cAAe;MAAAF,QAAA,GAClCd,IAAA,CAACiB,gBAAgB;QAChBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QAAA,CAAC;QACvCT,KAAK,EAAEC,MAAM,CAACS,WAAY;QAAAP,QAAA,EAE1Bd,IAAA,CAACJ,OAAO;UAAC0B,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE1B,MAAM,CAAC2B;QAAK,CAAE;MAAC,CACpC,CAAC,EACnBzB,IAAA,CAAC0B,SAAS;QACTf,KAAK,EAAEC,MAAM,CAACe,OAAQ;QACtBC,KAAK,EAAErB,WAAY;QACnBsB,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKtB,cAAc,CAACsB,IAAI,CAAC;QAAA,CAAC;QAC7CC,eAAe,EAAEtB;MAAY,CAC7B,CAAC,EACDF,WAAW,KAAK,EAAE,IAClBP,IAAA,CAACiB,gBAAgB;QAChBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QAAA,CAAC;QACvCT,KAAK,EAAEC,MAAM,CAACS,WAAY;QAAAP,QAAA,EAE1Bd,IAAA,CAACJ,OAAO;UAAC0B,IAAI,EAAC,QAAQ;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE1B,MAAM,CAAC2B;QAAK,CAAE;MAAC,CACtC,CAClB,EACAlB,WAAW,KAAK,EAAE,IAClBP,IAAA,CAACiB,gBAAgB;QAChBC,OAAO,EAAET,WAAY;QACrBE,KAAK,EAAAqB,aAAA,CAAAA,aAAA,KAAOpB,MAAM,CAACS,WAAW,GAAKT,MAAM,CAACqB,UAAU,CAAG;QAAAnB,QAAA,EAEvDd,IAAA,CAACJ,OAAO;UAAC0B,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CAC9B,CAClB;IAAA,CACI,CAAC;EAAA,CACF,CAAC;AAET,CAAC;AAED,eAAerB,UAAU;AAEzB,IAAMS,MAAM,GAAGsB,UAAU,CAACC,MAAM,CAAC;EAChCtB,SAAS,EAAE;IACVuB,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE;EAChB,CAAC;EACDxC,eAAe,EAAE;IAChBuC,IAAI,EAAE;EACP,CAAC;EACDpB,cAAc,EAAE;IACfqB,aAAa,EAAE,KAAK;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,eAAe,EAAE,EAAE;IACnBC,MAAM,EAAE;EACT,CAAC;EACDb,OAAO,EAAE;IACRS,IAAI,EAAE,CAAC;IACPK,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE7C,MAAM,CAAC8C,SAAS;IAC7BC,gBAAgB,EAAE,EAAE;IACpBP,iBAAiB,EAAE;EACpB,CAAC;EACDjB,WAAW,EAAE;IACZyB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,KAAK,EAAE;EACR,CAAC;EACDf,UAAU,EAAE;IACXgB,eAAe,EAAEnD,MAAM,CAAC2B,IAAI;IAC5BiB,YAAY,EAAE,EAAE;IAChBJ,iBAAiB,EAAE,CAAC;IACpBU,KAAK,EAAE;EACR;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}