{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getFirebaseApp } from \"./firebaseHelper\";\nimport uuid from \"react-native-uuid\";\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable } from \"firebase/storage\";\nexport var launchImagePicker = function () {\n  var _ref = _asyncToGenerator(function* () {\n    yield checkMediaPermissions();\n    var result = yield ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1\n    });\n    if (!result.canceled) {\n      return result.uri;\n    }\n  });\n  return function launchImagePicker() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var uploadImageAsynce = function () {\n  var _ref2 = _asyncToGenerator(function* (uri) {\n    var app = getFirebaseApp();\n    var blob = yield new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function (e) {\n        console.log(e);\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", uri, true);\n      xhr.send();\n    });\n    var pathFolder = \"profilePics\";\n    var storageRef = ref(getStorage(app), pathFolder + \"/\" + uuid.v4());\n    yield uploadBytesResumable(storageRef, blob);\n    blob.close();\n    return yield getDownloadURL(storageRef);\n  });\n  return function uploadImageAsynce(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar checkMediaPermissions = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    if (Platform.OS !== \"web\") {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        return Promise.reject(\"We need permission to access your photos\");\n      }\n    }\n    return Promise.resolve();\n  });\n  return function checkMediaPermissions() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["ImagePicker","Platform","getFirebaseApp","uuid","getDownloadURL","getStorage","ref","uploadBytesResumable","launchImagePicker","_ref","_asyncToGenerator","checkMediaPermissions","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","uri","apply","arguments","uploadImageAsynce","_ref2","app","blob","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","console","log","TypeError","responseType","open","send","pathFolder","storageRef","v4","close","_x","_ref3","OS","permissionResult","requestMediaLibraryPermissionsAsync","granted"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/utils/imagePickerHelper.js"],"sourcesContent":["import * as ImagePicker from \"expo-image-picker\";\nimport { Platform } from \"react-native\";\nimport { getFirebaseApp } from \"./firebaseHelper\";\nimport uuid from \"react-native-uuid\";\nimport {\n\tgetDownloadURL,\n\tgetStorage,\n\tref,\n\tuploadBytesResumable,\n} from \"firebase/storage\";\n\nexport const launchImagePicker = async () => {\n\tawait checkMediaPermissions();\n\n\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t// allows only images to pick\n\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t// allows to crop the image\n\t\tallowsEditing: true,\n\t\t// aspect ratio\n\t\taspect: [1, 1], // square image\n\t\tquality: 1,\n\t});\n\n\tif (!result.canceled) {\n\t\treturn result.uri;\n\t}\n};\n\n// converting the locally uploaded image into a blob (binary large object)\nexport const uploadImageAsynce = async (uri) => {\n\tconst app = getFirebaseApp();\n\n\tconst blob = await new Promise((resolve, reject) => {\n\t\t// creating a request\n\t\tconst xhr = new XMLHttpRequest();\n\t\t// sending response on load\n\t\txhr.onload = function () {\n\t\t\tresolve(xhr.response);\n\t\t};\n\n\t\t// error catching block\n\t\txhr.onerror = function (e) {\n\t\t\tconsole.log(e);\n\t\t\treject(new TypeError(\"Network request failed\"));\n\t\t};\n\n\t\txhr.responseType = \"blob\";\n\t\txhr.open(\"GET\", uri, true);\n\t\txhr.send();\n\t});\n\n\tconst pathFolder = \"profilePics\";\n\tconst storageRef = ref(getStorage(app), `${pathFolder}/${uuid.v4()}`);\n\n\tawait uploadBytesResumable(storageRef, blob);\n\n\tblob.close();\n\n\treturn await getDownloadURL(storageRef);\n};\n\nconst checkMediaPermissions = async () => {\n\tif (Platform.OS !== \"web\") {\n\t\tconst permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\t\tif (permissionResult.granted === false) {\n\t\t\treturn Promise.reject(\"We need permission to access your photos\");\n\t\t}\n\t}\n\n\treturn Promise.resolve();\n};\n"],"mappings":";AAAA,OAAO,KAAKA,WAAW,MAAM,mBAAmB;AAAC,OAAAC,QAAA;AAEjD,SAASC,cAAc;AACvB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SACCC,cAAc,EACdC,UAAU,EACVC,GAAG,EACHC,oBAAoB,QACd,kBAAkB;AAEzB,OAAO,IAAMC,iBAAiB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC5C,MAAMC,qBAAqB,CAAC,CAAC;IAE7B,IAAMC,MAAM,SAASZ,WAAW,CAACa,uBAAuB,CAAC;MAExDC,UAAU,EAAEd,WAAW,CAACe,gBAAgB,CAACC,MAAM;MAE/CC,aAAa,EAAE,IAAI;MAEnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACdC,OAAO,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACP,MAAM,CAACQ,QAAQ,EAAE;MACrB,OAAOR,MAAM,CAACS,GAAG;IAClB;EACD,CAAC;EAAA,gBAhBYb,iBAAiBA,CAAA;IAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgB7B;AAGD,OAAO,IAAMC,iBAAiB;EAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOW,GAAG,EAAK;IAC/C,IAAMK,GAAG,GAAGxB,cAAc,CAAC,CAAC;IAE5B,IAAMyB,IAAI,SAAS,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MAEnD,IAAMC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;MAEhCD,GAAG,CAACE,MAAM,GAAG,YAAY;QACxBJ,OAAO,CAACE,GAAG,CAACG,QAAQ,CAAC;MACtB,CAAC;MAGDH,GAAG,CAACI,OAAO,GAAG,UAAUC,CAAC,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACdN,MAAM,CAAC,IAAIS,SAAS,CAAC,wBAAwB,CAAC,CAAC;MAChD,CAAC;MAEDR,GAAG,CAACS,YAAY,GAAG,MAAM;MACzBT,GAAG,CAACU,IAAI,CAAC,KAAK,EAAEpB,GAAG,EAAE,IAAI,CAAC;MAC1BU,GAAG,CAACW,IAAI,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,IAAMC,UAAU,GAAG,aAAa;IAChC,IAAMC,UAAU,GAAGtC,GAAG,CAACD,UAAU,CAACqB,GAAG,CAAC,EAAKiB,UAAU,SAAIxC,IAAI,CAAC0C,EAAE,CAAC,CAAG,CAAC;IAErE,MAAMtC,oBAAoB,CAACqC,UAAU,EAAEjB,IAAI,CAAC;IAE5CA,IAAI,CAACmB,KAAK,CAAC,CAAC;IAEZ,aAAa1C,cAAc,CAACwC,UAAU,CAAC;EACxC,CAAC;EAAA,gBA9BYpB,iBAAiBA,CAAAuB,EAAA;IAAA,OAAAtB,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GA8B7B;AAED,IAAMZ,qBAAqB;EAAA,IAAAqC,KAAA,GAAAtC,iBAAA,CAAG,aAAY;IACzC,IAAIT,QAAQ,CAACgD,EAAE,KAAK,KAAK,EAAE;MAC1B,IAAMC,gBAAgB,SAASlD,WAAW,CAACmD,mCAAmC,CAAC,CAAC;MAChF,IAAID,gBAAgB,CAACE,OAAO,KAAK,KAAK,EAAE;QACvC,OAAOxB,OAAO,CAACE,MAAM,CAAC,0CAA0C,CAAC;MAClE;IACD;IAEA,OAAOF,OAAO,CAACC,OAAO,CAAC,CAAC;EACzB,CAAC;EAAA,gBATKlB,qBAAqBA,CAAA;IAAA,OAAAqC,KAAA,CAAA1B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAS1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}