{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useEffect } from \"react\";\nimport colors from \"../constants/colors\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticate, setDidTryAutoLogin } from \"../store/authSlice\";\nimport { getUserData } from \"../utils/actions/userActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StartUpScreen = function StartUpScreen() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var tryLogin = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var storedAuthInfo = yield AsyncStorage.getItem(\"userData\");\n        if (!storedAuthInfo) {\n          dispatch(setDidTryAutoLogin());\n          return;\n        }\n        var parsedData = JSON.parse(storedAuthInfo);\n        var token = parsedData.token,\n          userId = parsedData.userId,\n          expiryDateString = parsedData.expiryDate;\n        var expiryDate = new Date(expiryDateString);\n        if (expiryDate <= new Date() || !token || !userId) {\n          dispatch(setDidTryAutoLogin());\n          return;\n        }\n        var userData = yield getUserData(userId);\n        dispatch(authenticate({\n          token: token,\n          userData: userData\n        }));\n      });\n      return function tryLogin() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    tryLogin();\n  }, [dispatch]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: colors.primary\n    })\n  });\n};\nexport default StartUpScreen;","map":{"version":3,"names":["React","useEffect","colors","AsyncStorage","useDispatch","authenticate","setDidTryAutoLogin","getUserData","jsx","_jsx","StartUpScreen","dispatch","tryLogin","_ref","_asyncToGenerator","storedAuthInfo","getItem","parsedData","JSON","parse","token","userId","expiryDateString","expiryDate","Date","userData","apply","arguments","View","style","flex","justifyContent","alignItems","children","ActivityIndicator","size","color","primary"],"sources":["/Users/gulshan/Documents/React_native_dev/whatsapp_clone/screens/StartUpScreen.js"],"sourcesContent":["import { View, ActivityIndicator } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport colors from \"../constants/colors\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticate, setDidTryAutoLogin } from \"../store/authSlice\";\nimport { getUserData } from \"../utils/actions/userActions\";\n\nconst StartUpScreen = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tconst tryLogin = async () => {\n\t\t\tconst storedAuthInfo = await AsyncStorage.getItem(\"userData\");\n\n\t\t\tif (!storedAuthInfo) {\n\t\t\t\tdispatch(setDidTryAutoLogin());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst parsedData = JSON.parse(storedAuthInfo);\n\n\t\t\tconst { token, userId, expiryDate: expiryDateString } = parsedData;\n\n\t\t\tconst expiryDate = new Date(expiryDateString);\n\n\t\t\tif (expiryDate <= new Date() || !token || !userId) {\n\t\t\t\tdispatch(setDidTryAutoLogin());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userData = await getUserData(userId);\n\t\t\tdispatch(authenticate({ token: token, userData }));\n\t\t};\n\n\t\ttryLogin();\n\t}, [dispatch]);\n\n\treturn (\n\t\t<View\n\t\t\tstyle={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n\t\t>\n\t\t\t<ActivityIndicator size={\"large\"} color={colors.primary} />\n\t\t</View>\n\t);\n};\n\nexport default StartUpScreen;\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM;AACb,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,EAAEC,kBAAkB;AACzC,SAASC,WAAW;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAE3D,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC3B,IAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,YAAM;IACf,IAAMW,QAAQ;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAMC,cAAc,SAASZ,YAAY,CAACa,OAAO,CAAC,UAAU,CAAC;QAE7D,IAAI,CAACD,cAAc,EAAE;UACpBJ,QAAQ,CAACL,kBAAkB,CAAC,CAAC,CAAC;UAC9B;QACD;QAEA,IAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC;QAE7C,IAAQK,KAAK,GAA2CH,UAAU,CAA1DG,KAAK;UAAEC,MAAM,GAAmCJ,UAAU,CAAnDI,MAAM;UAAcC,gBAAgB,GAAKL,UAAU,CAA3CM,UAAU;QAEjC,IAAMA,UAAU,GAAG,IAAIC,IAAI,CAACF,gBAAgB,CAAC;QAE7C,IAAIC,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACJ,KAAK,IAAI,CAACC,MAAM,EAAE;UAClDV,QAAQ,CAACL,kBAAkB,CAAC,CAAC,CAAC;UAC9B;QACD;QAEA,IAAMmB,QAAQ,SAASlB,WAAW,CAACc,MAAM,CAAC;QAC1CV,QAAQ,CAACN,YAAY,CAAC;UAAEe,KAAK,EAAEA,KAAK;UAAEK,QAAQ,EAARA;QAAS,CAAC,CAAC,CAAC;MACnD,CAAC;MAAA,gBArBKb,QAAQA,CAAA;QAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,GAqBb;IAEDf,QAAQ,CAAC,CAAC;EACX,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,OACCF,IAAA,CAACmB,IAAI;IACJC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EAEnExB,IAAA,CAACyB,iBAAiB;MAACC,IAAI,EAAE,OAAQ;MAACC,KAAK,EAAElC,MAAM,CAACmC;IAAQ,CAAE;EAAC,CACtD,CAAC;AAET,CAAC;AAED,eAAe3B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}